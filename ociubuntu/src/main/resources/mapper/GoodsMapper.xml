<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.oci.mapper.GoodsMapper">
	<resultMap type="Goods" id="goodsResultMap">
		<id		column="g_code" 		property="goodsCode"/>
		<result column="g_name"			property="goodsName"/>
		<result column="g_price"		property="goodsPrice"/>
		<result column="g_seller_id"	property="goodsSellerId"/>
		<result column="g_reg_date"		property="goodsRegDate"/>
		<association property="sellerInfo" 	javaType="Member">
			<id 	column="m_id" 		property="memberId"/>
			<result column="m_pw" 		property="memberPw"/>
			<result column="m_level" 	property="memberLevel"/>
			<result column="m_name" 	property="memberName"/>
			<result column="m_email" 	property="memberEmail"/>
			<result column="m_addr" 	property="memberAddress"/>
			<result column="m_reg_date" property="memberRegDate"/>
			<association property="memberLevelDto" javaType="MemberLevel">
				<id		column="level_num" 		property="levelNum"/>
				<result column="level_name"		property="levelName"/>
				<result column="level_reg_date"	property="levelRegDate"/>
			</association>
		</association>
	</resultMap>
	
	<resultMap type="Member" id="sellerResultMap">
		<id 	column="m_id" 		property="memberId"/>
		<result column="m_pw" 		property="memberPw"/>
		<result column="m_level" 	property="memberLevel"/>
		<result column="m_name" 	property="memberName"/>
		<result column="m_email" 	property="memberEmail"/>
		<result column="m_addr" 	property="memberAddress"/>
		<result column="m_reg_date" property="memberRegDate"/>
		<collection property="goodsList" javaType="list" ofType="Goods">
			<id		column="g_code" 		property="goodsCode"/>
			<result column="g_name"			property="goodsName"/>
			<result column="g_price"		property="goodsPrice"/>
			<result column="g_seller_id"	property="goodsSellerId"/>
			<result column="g_reg_date"		property="goodsRegDate"/>
		</collection>
	</resultMap>
	
	<select id="getSearchSellerList" parameterType="map" resultMap="sellerResultMap" fetchSize="100">
		/* 판매자 목록 조회(검색) */
		SELECT
		    m.m_id
		   ,m.m_name
		   ,m.m_email
		   ,m.m_addr
		   ,g.g_code
		   ,g.g_name
		   ,g.g_price
		   ,g.g_reg_date
		FROM
		   tb_member AS m
		   INNER JOIN 
		   tb_goods AS g
		   ON 
		   m.m_id = g.g_seller_id
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="sv != null and sv != ''">
				${sk} LIKE CONCAT('%', #{sv},'%')
			</if>
		</trim>
		ORDER BY m.m_id;
	</select>

	<insert id="addGoods" parameterType="Goods">
		<selectKey keyProperty="goodsCode" resultType="String" order="BEFORE">
			SELECT
				(CASE 
				 -- 상품이 없을 경우
				 WHEN count(g.g_code) = 0 THEN 'g001'
				 -- 999개 등록되어 있을 경우
				 WHEN (Max(CAST(substring_index(g.g_code,'g',-1) AS UNSIGNED))+1) > 999 THEN
				 	concat('g',Max(CAST(substring_index(g.g_code,'g',-1) AS UNSIGNED))+1)
				 -- 1~999 범위일 경우
				 ELSE
					concat('g',LPAD(Max(CAST(substring_index(g.g_code,'g',-1) AS UNSIGNED))+1,3,0))	
				 END) AS goodsCode
			FROM 
				tb_goods AS g;
		</selectKey>
		INSERT INTO tb_goods
		(  g_code
		  ,g_name
		  ,g_price
		  ,g_seller_id
		  ,g_reg_date
		) VALUES (
		   #{goodsCode}
		  ,#{goodsName}
		  ,#{goodsPrice}
		  ,#{goodsSellerId}
		  ,CURDATE()
		);
	</insert>
	<select id="getGoodsListCount" resultType="int">
		/* 상품목록갯수 */
		SELECT
			count(1)
		FROM
			tb_goods; 	
	</select>

	<!-- 상품 목록 조회 -->
	<select id="getGoodsList" resultMap="goodsResultMap" parameterType="map" fetchSize="100">
		/* 상품 목록 조회 */
		SELECT 
		    g.g_code 
		   ,g.g_name 
		   ,g.g_price
		   ,g.g_seller_id
		   ,m.m_name     
		   ,m.m_email     
		   ,g.g_reg_date 
		FROM 
		   tb_goods AS g
		   INNER JOIN 
		   tb_member AS m
		   ON 
		   g.g_seller_id = m.m_id
		ORDER BY g.g_code
		LIMIT #{rowFistNum}, #{rowPerPage}
	</select>
</mapper>